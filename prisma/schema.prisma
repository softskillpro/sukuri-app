generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String      @id @default(cuid())
  name         String?
  email        String?     @unique
  username     String      @unique
  address      String      @unique
  sukuriPassId String?
  accounts     Account[]
  Project      Project[]
  sessions     Session[]
  pass         SukuriPass? @relation(fields: [sukuriPassId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SukuriPass {
  id         String  @id @unique @default(cuid())
  trim       String?
  background String?
  foil       String?
  User       User[]
}

model Project {
  id                String        @id @unique @default(cuid())
  name              String        @unique
  short_description String
  long_description  String
  thumbnail_image   String?
  large_image       String?
  chain_id          Int
  member_count      Int?
  is_erc721         Boolean
  is_featured       Boolean?
  accepted_payments Json
  userId            String?
  User              User?         @relation(fields: [userId], references: [id])
  tiers             ProjectTier[]
}

model ProjectTier {
  id                       String   @id @unique @default(cuid())
  address                  String
  tier_id                  Int
  name                     String
  price                    String
  unit                     String
  supply                   Int
  filled                   Int
  subscription_length      Int
  subscription_length_unit String
  description              String
  features                 String[]
  projectId                String?
  Project                  Project? @relation(fields: [projectId], references: [id])
}
